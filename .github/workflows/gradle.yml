name: Build and Publish

on:
    push:
        branches:
            - '*/dev'
    pull_request:

permissions:
    packages: write

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Get branch name
                id: get_branch
                run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

            -   name: Get latest commit hash
                id: get_hash
                run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            -   name: Get MC version
                uses: christian-draeger/read-properties@908f99d3334be3802ec7cb528395a69d19914e7b
                id: read_properties
                with:
                    path: gradle.properties
                    properties: minecraft_version enabled_platforms mod_version archives_base_name

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: 17
                    distribution: temurin

            -   name: Validate Gradle Wrapper
                uses: gradle/wrapper-validation-action@v1

            -   name: Grant execute permissions to gradlew
                run: chmod +x gradlew

            -   name: Setup Gradle
                uses: gradle/gradle-build-action@v3
                with:
                    gradle-home-cache-includes: |
                        caches
                        loom-cache

            -   name: Run Data Gen
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: runDatagen

            -   name: Build
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: build

            -   name: Publish to GitHub Packages
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                if: github.event_name == 'push' && env.GITHUB_TOKEN != ''
                continue-on-error: true
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: publishMavenJavaPublicationToGitHubPackagesRepository

            -   name: Publish to realRobotix Maven
                env:
                    MAVEN_USER: ${{ secrets.MAVEN_USER }}
                    MAVEN_ACCESS_TOKEN: ${{ secrets.MAVEN_ACCESS_TOKEN }}
                if: github.event_name == 'push' && env.MAVEN_USER != '' && env.MAVEN_ACCESS_TOKEN != ''
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: |
                        publishMavenJavaPublicationToRealRobotixMavenRepository
                        -PrealRobotixMavenUsername=${{ secrets.MAVEN_USER }}
                        -PrealRobotixMavenPassword=${{ secrets.MAVEN_ACCESS_TOKEN }}

            -   name: Find jars
                id: find_jars
                run: |
                    EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
                    echo "jars<<$EOF" >> $GITHUB_OUTPUT
                    find . -regextype posix-extended -regex "\.\/($(tr "," "|" <<< ${{ steps.read_properties.outputs.enabled_platforms }}))\/build\/libs\/${{ steps.read_properties.outputs.archives_base_name }}-${{ steps.read_properties.outputs.mod_version }}-nightly-${{ steps.get_hash.outputs.sha_short }}\+($(tr "," "|" <<< ${{ steps.read_properties.outputs.enabled_platforms }}))-${{ steps.read_properties.outputs.minecraft_version }}.jar" >> $GITHUB_OUTPUT
                    echo "$EOF" >> $GITHUB_OUTPUT

            -   name: Send building message to discord
                env:
                    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
                if: github.event_name == 'push' && env.DISCORD_WEBHOOK != ''
                uses: realRobotix/action-discord-notifier@release-master
                with:
                    webhook: ${{ secrets.DISCORD_WEBHOOK }}
                    message-title: Building mod from branch ${{ steps.get_branch.outputs.branch }}

            -   name: Send built file to discord
                env:
                    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
                if: github.event_name == 'push' && env.DISCORD_WEBHOOK != ''
                run: |
                    while IFS= read -r f
                      do curl -F "file=@\"$f\";filename=\"$(echo ${f##*/} | sed 's/+/-/g')\"" $DISCORD_WEBHOOK
                    done <<< "${{ steps.find_jars.outputs.jars }}"

            -   name: Archive Artifacts
                uses: actions/upload-artifact@v3.1.2
                with:
                    name: ${{ steps.read_properties.outputs.archives_base_name }}-${{ steps.read_properties.outputs.minecraft_version }}-${{ steps.read_properties.outputs.mod_version }}-nightly-${{ steps.get_hash.outputs.sha_short }}
                    path: ${{ steps.find_jars.outputs.jars }}
